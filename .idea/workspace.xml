<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="c8cbf8d6-ca4b-4205-8052-f55c8d85dedb" name="Default Changelist" comment="">
      <change afterPath="$PROJECT_DIR$/scripts/install_dataset.sh" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/scripts/install_repositories.sh" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/samples/gigan_cusumano_model.py" beforeDir="false" afterPath="$PROJECT_DIR$/samples/gigan_cusumano_model.py" afterDir="false" />
    </list>
    <option name="EXCLUDED_CONVERTED_TO_IGNORED" value="true" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ChangesViewManager">
    <option name="groupingKeys">
      <option value="directory" />
    </option>
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Python Script" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="ProjectId" id="1P3hD9Y8CFUOg0PsmWWg42eym13" />
  <component name="ProjectLevelVcsManager">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="PropertiesComponent">
    <property name="ASKED_SHARE_PROJECT_CONFIGURATION_FILES" value="true" />
    <property name="SHARE_PROJECT_CONFIGURATION_FILES" value="true" />
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$" />
    <property name="node.js.detected.package.eslint" value="true" />
    <property name="node.js.detected.package.tslint" value="true" />
    <property name="node.js.path.for.package.eslint" value="project" />
    <property name="node.js.path.for.package.tslint" value="project" />
    <property name="node.js.selected.package.eslint" value="(autodetect)" />
    <property name="node.js.selected.package.tslint" value="(autodetect)" />
    <property name="nodejs_interpreter_path.stuck_in_default_project" value="undefined stuck path" />
    <property name="nodejs_npm_path_reset_for_default_project" value="true" />
    <property name="settings.editor.selected.configurable" value="com.jetbrains.python.configuration.PythonContentEntriesConfigurable" />
  </component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/samples" />
      <recent name="$PROJECT_DIR$/samples/datasets" />
      <recent name="$PROJECT_DIR$/practice" />
    </key>
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/gigan/models" />
      <recent name="$PROJECT_DIR$/gigan/visualization" />
      <recent name="$PROJECT_DIR$/practice" />
      <recent name="$PROJECT_DIR$/tests" />
    </key>
  </component>
  <component name="RunDashboard">
    <option name="ruleStates">
      <list>
        <RuleState>
          <option name="name" value="ConfigurationTypeDashboardGroupingRule" />
        </RuleState>
        <RuleState>
          <option name="name" value="StatusDashboardGroupingRule" />
        </RuleState>
      </list>
    </option>
  </component>
  <component name="RunManager" selected="Python.gigan_cusumano_model">
    <configuration default="true" type="PythonConfigurationType" factoryName="Python">
      <module name="GoalInferenceGAN" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="SCRIPT_NAME" value="" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="true" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="evaluate_model" type="PythonConfigurationType" factoryName="Python" temporary="true">
      <module name="GoalInferenceGAN" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/../sgan/" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/../sgan/scripts/evaluate_model.py" />
      <option name="PARAMETERS" value="--model_path models/sgan-models" />
      <option name="SHOW_COMMAND_LINE" value="true" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="gigan_cusumano_model" type="PythonConfigurationType" factoryName="Python" temporary="true">
      <module name="GoalInferenceGAN" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="/usr/bin/python3.6" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/samples" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/samples/gigan_cusumano_model.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="true" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="goalInference" type="PythonConfigurationType" factoryName="Python" temporary="true">
      <module name="GoalInferenceGAN" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/../IntentionInference/GoalInference" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/../IntentionInference/GoalInference/goalInference.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="true" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="mh_example" type="PythonConfigurationType" factoryName="Python" temporary="true">
      <module name="GoalInferenceGAN" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/practice" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/practice/mh_example.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="true" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="pgmpy_example" type="PythonConfigurationType" factoryName="Python" temporary="true">
      <module name="GoalInferenceGAN" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/practice" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/practice/pgmpy_example.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="true" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="Python.gigan_cusumano_model" />
      <item itemvalue="Python.goalInference" />
      <item itemvalue="Python.mh_example" />
      <item itemvalue="Python.pgmpy_example" />
      <item itemvalue="Python.evaluate_model" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Python.gigan_cusumano_model" />
        <item itemvalue="Python.evaluate_model" />
        <item itemvalue="Python.pgmpy_example" />
        <item itemvalue="Python.mh_example" />
        <item itemvalue="Python.goalInference" />
      </list>
    </recent_temporary>
  </component>
  <component name="SvnConfiguration">
    <configuration />
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="c8cbf8d6-ca4b-4205-8052-f55c8d85dedb" name="Default Changelist" comment="" />
      <created>1554883914718</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1554883914718</updated>
      <workItem from="1554883917160" duration="10192000" />
      <workItem from="1555320049470" duration="84000" />
      <workItem from="1555320166486" duration="10287000" />
      <workItem from="1556078602952" duration="21000" />
      <workItem from="1556566800474" duration="27000" />
      <workItem from="1556567009262" duration="17556000" />
      <workItem from="1556659597392" duration="3642000" />
      <workItem from="1556740010283" duration="8980000" />
      <workItem from="1556814403112" duration="8077000" />
      <workItem from="1556857856836" duration="8739000" />
      <workItem from="1557157922872" duration="1822000" />
      <workItem from="1557523881589" duration="1123000" />
      <workItem from="1557691984837" duration="9803000" />
      <workItem from="1557712931945" duration="36000" />
      <workItem from="1557713223699" duration="63000" />
      <workItem from="1557713650920" duration="19732000" />
      <workItem from="1557762469947" duration="9756000" />
      <workItem from="1558023023629" duration="8957000" />
      <workItem from="1558110473815" duration="5160000" />
      <workItem from="1558324808321" duration="651000" />
      <workItem from="1558369028568" duration="2428000" />
      <workItem from="1558455725214" duration="5369000" />
      <workItem from="1558557068009" duration="21336000" />
      <workItem from="1558715130935" duration="17062000" />
      <workItem from="1559072373425" duration="9549000" />
      <workItem from="1559147284699" duration="18969000" />
      <workItem from="1559251999404" duration="28090000" />
      <workItem from="1562206841166" duration="1901000" />
      <workItem from="1562299977347" duration="1811000" />
      <workItem from="1562371313742" duration="1203000" />
      <workItem from="1562429789981" duration="16331000" />
      <workItem from="1562804698025" duration="11330000" />
      <workItem from="1563051350893" duration="10462000" />
      <workItem from="1563152376366" duration="1604000" />
      <workItem from="1563154195181" duration="96000" />
      <workItem from="1563156797741" duration="6310000" />
      <workItem from="1563238344235" duration="20085000" />
      <workItem from="1565108586637" duration="2130000" />
      <workItem from="1566162514126" duration="22000" />
      <workItem from="1566162595452" duration="759000" />
      <workItem from="1566163412840" duration="4809000" />
    </task>
    <task id="LOCAL-00001" summary="Stubs for python package design. Mostly boilerplate, still figuring out how best to best import SGAN.">
      <created>1555396112618</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1555396112618</updated>
    </task>
    <task id="LOCAL-00002" summary="Implementation of Metropolis Hastings with example. Want to generalize as possible this algorithm in the GIGAN library for our problem.">
      <created>1556573015930</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1556573015934</updated>
    </task>
    <option name="localTasksCounter" value="3" />
    <servers />
  </component>
  <component name="TodoView">
    <todo-panel id="selected-file">
      <is-autoscroll-to-source value="true" />
    </todo-panel>
    <todo-panel id="all">
      <are-packages-shown value="true" />
      <is-autoscroll-to-source value="true" />
    </todo-panel>
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="1" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State>
              <option name="COLUMN_ORDER" />
            </State>
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <option name="CHECK_NEW_TODO" value="false" />
    <MESSAGE value="Stubs for python package design. Mostly boilerplate, still figuring out how best to best import SGAN." />
    <MESSAGE value="Implementation of Metropolis Hastings with example. Want to generalize as possible this algorithm in the GIGAN library for our problem." />
    <option name="LAST_COMMIT_MESSAGE" value="Implementation of Metropolis Hastings with example. Want to generalize as possible this algorithm in the GIGAN library for our problem." />
  </component>
  <component name="XDebuggerManager">
    <watches-manager>
      <configuration name="PythonConfigurationType">
        <watch expression="batch" />
        <watch expression="frame" />
      </configuration>
    </watches-manager>
  </component>
  <component name="com.intellij.coverage.CoverageDataManagerImpl">
    <SUITE FILE_PATH="coverage/GoalInferenceGAN$pgmpy_example.coverage" NAME="pgmpy_example Coverage Results" MODIFIED="1556902506079" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/practice" />
    <SUITE FILE_PATH="coverage/GoalInferenceGAN$gigan_cusumano_model.coverage" NAME="gigan_cusumano_model Coverage Results" MODIFIED="1565120486085" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/samples" />
    <SUITE FILE_PATH="coverage/GoalInferenceGAN$evaluate_model.coverage" NAME="evaluate_model Coverage Results" MODIFIED="1559600789054" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/../sgan/" />
  </component>
  <component name="debuggerHistoryManager">
    <expressions id="evaluateExpression">
      <expression>
        <expression-string>nodes.get(140127012339384)</expression-string>
        <language-id>Python</language-id>
        <evaluation-mode>EXPRESSION</evaluation-mode>
      </expression>
      <expression>
        <expression-string>nodes.get(0)</expression-string>
        <language-id>Python</language-id>
        <evaluation-mode>EXPRESSION</evaluation-mode>
      </expression>
      <expression>
        <expression-string>nodes.get(&quot;sart&quot;)</expression-string>
        <language-id>Python</language-id>
        <evaluation-mode>EXPRESSION</evaluation-mode>
      </expression>
      <expression>
        <expression-string>nodes.get(&quot;sart_node&quot;)</expression-string>
        <language-id>Python</language-id>
        <evaluation-mode>EXPRESSION</evaluation-mode>
      </expression>
      <expression>
        <expression-string>nodes[&quot;sart&quot;]</expression-string>
        <language-id>Python</language-id>
        <evaluation-mode>EXPRESSION</evaluation-mode>
      </expression>
      <expression>
        <expression-string>nodes[sart]</expression-string>
        <language-id>Python</language-id>
        <evaluation-mode>EXPRESSION</evaluation-mode>
      </expression>
      <expression>
        <expression-string>nodes[sart_node]</expression-string>
        <language-id>Python</language-id>
        <evaluation-mode>EXPRESSION</evaluation-mode>
      </expression>
      <expression>
        <expression-string>nodes._nodes[&quot;sart&quot;]</expression-string>
        <language-id>Python</language-id>
        <evaluation-mode>EXPRESSION</evaluation-mode>
      </expression>
      <expression>
        <expression-string>nodes._nodes</expression-string>
        <language-id>Python</language-id>
        <evaluation-mode>EXPRESSION</evaluation-mode>
      </expression>
    </expressions>
  </component>
</project>